#let's say you have a list of sentences. 
#Can you write a function that would take that list of sentences and 
#return a dictionary with word counts for all the words in the list of sentences?

import re
def sent_to_dic(lis):
    text=' '.join(lis)  #turn the list to a string 
    text=re.sub(r'[\.\,\=\-\_\'\"\?\!\&\#]+', '', text) #get rid of the punctuation marks
    text=text.lower() #turn to lower case
    text=re.split(r'\W+', text) #tokenize the entire text    
    dic={} #create an empty dic
    for word in text:
        if not dic.get(word):
            dic[word]=1
        else:
            dic[word]+=1
    return dic
    
lis=['Sometimes, it becomes tough to remove brackets from the text', 'Hence, python can do this for us sometimes', 'In python, we can remove brackets with the help of regular expressions']
print(sent_to_dic(lis))     

#output
{'sometimes': 2, 'it': 1, 'becomes': 1, 'tough': 1, 'to': 1, 'remove': 2, 'brackets': 2, 'from': 1, 'the': 2, 'text': 1, 'hence': 1,
'python': 2, 'can': 2, 'do': 1, 'this': 1, 'for': 1, 'us': 1, 'in': 1, 'we': 1, 'with': 1, 'help': 1, 'of': 1, 'regular': 1, 'expressions': 1}
