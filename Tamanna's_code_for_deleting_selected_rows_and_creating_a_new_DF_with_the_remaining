#code for creating a dataframe with only those data that are not outliers (after deleting the rows that match with those in a list)

#lis=['2165', '2442', '2728', '2966', '3141', '3145', '3188', '4861', '4928', '4974', '5096', '5316', '5389', '5685', '5951', '6054', '7243', '1930', '2019', '2023', '2784', '2810', '2846', '2865', '3102', '3115', '3286', '3975', '4369', '4397', '4689', '4758', '4862', '4880', '4885', '4910', '4941', '4983', '5030', '5033', '5051', '5113', '5123', '5134', '5152', '5153', '5154', '5161', '5204', '5213', '5220', '5227', '5243', '5273', '5287', '5331', '5353', '5358', '5374', '5385', '5417', '5483', '5517', '5553', '5604', '5895', '6050', '6327', '6930']
import itertools
import csv
def make_new_df(inp, outp, lis):
    with open(inp, 'r') as data, open (outp, 'w', newline='') as out:
        fields=[]
        writer=csv.writer(out)
        data1=csv.reader(data)
        header=next(data1)
        for i in header:
            fields.append(i)
        writer.writerow(fields)
        for row in data1:        
            if row[0] not in lis:
                writer.writerows(itertools.islice([row], 0, len(fields)))
            #result.append(list(itertools.islice(data1, 0, 34)))
    
inp = 'F:\\OneDriveGSU\\OneDrive - Georgia State University\\Attachments\\Spring2021_RA\\dataframe_2_for_Regress_all_Final_with_min_effect_size_zupyter.csv'  
outp='F:\\dataframe_for_Regression_with_min_effect_size_No_Outliers_Trial.csv'
lis=['2165', '2442', '2728', '2966', '3141', '3145', '3188', '4861', '4928', '4974', '5096', '5316', '5389', '5685', '5951', '6054', '7243', '1930', '2019', '2023', '2784', '2810', '2846', '2865', '3102', '3115', '3286', '3975', '4369', '4397', '4689', '4758', '4862', '4880', '4885', '4910', '4941', '4983', '5030', '5033', '5051', '5113', '5123', '5134', '5152', '5153', '5154', '5161', '5204', '5213', '5220', '5227', '5243', '5273', '5287', '5331', '5353', '5358', '5374', '5385', '5417', '5483', '5517', '5553', '5604', '5895', '6050', '6327', '6930']
make_new_df(inp, outp, lis)   
   
